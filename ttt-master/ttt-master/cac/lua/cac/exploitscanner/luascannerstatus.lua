local self = {}
CAC.LuaScannerStatus = CAC.MakeConstructor (self, CAC.Serialization.ISerializable)

--[[
	Events:
		LuaScannerStateChanged (LuaScannerState luaScannerState)
			Fired when the lua scanner state has changed.
		LuaScanResultChanged (LuaScanResult luaScanResult)
			Fired when the lua scan result has changed.
		LastScanTimeChanged (lastScanTime)
			Fired when the last scan time has changed.
]]

CAC.LuaScannerStatus.Networking =
{
	Events =
	{
		LuaScannerStateChanged = { Handler = "SetLuaScannerState", Parameters = { "UInt8"  } },
		LuaScanResultChanged =
		{
			PreHandler = function (self, object, luaScanResult)
				self:RemoveChildById ("LuaScanResult")
				self:AddChild (luaScanResult, "LuaScanResult", self:IsReceiver () and CAC.LuaScanResultReceiver or CAC.LuaScanResultSender)
			end,
			Handler = function (self, object)
				-- the deserializer did everything
			end,
			ArgumentSerializer = function (self, outBuffer, luaScanResult)
				self:GetObject ():SerializeLuaScanResult (outBuffer)
			end,
			ArgumentDeserializer = function (self, inBuffer)
				self:RemoveChildById ("LuaScanResult")
				self:GetObject ():DeserializeLuaScanResult (inBuffer)
				self:AddChild (self:GetObject ():GetLuaScanResult (), "LuaScanResult", self:IsReceiver () and CAC.LuaScanResultReceiver or CAC.LuaScanResultSender)
			end,
			Parameters = { "LuaScanResult" }
		},
		LastScanTimeChanged    = { Handler = "SetLastScanTime",    Parameters = { "UInt32" } },
	},
	Commands =
	{
		StartScan =
		{
			Handler = function (self, object)
				CAC.LuaScanner:Scan ()
			end,
			Parameters = {}
		},
	},
	CommandPermissionPredicate = function (sender, object, commandName)
		return CAC.Permissions.PlayerHasPermission (sender:GetPlayer (), "ViewMenu")
	end,
	
	FullUpdateSerializer = function (self, outBuffer, object)
		object:Serialize              (outBuffer)
		object:SerializeLuaScanResult (outBuffer)
	end,
	FullUpdateDeserializer = function (self, inBuffer, object)
		object:Deserialize (inBuffer)
		
		self:RemoveChildById ("LuaScanResult")
		object:DeserializeLuaScanResult (inBuffer)
		self:AddChild (object:GetLuaScanResult (), "LuaScanResult", self:IsReceiver () and CAC.LuaScanResultReceiver or CAC.LuaScanResultSender)
	end,
	
	FullUpdateHandler = function (self, object)
		self:AddChild (object:GetLuaScanResult (), "LuaScanResult", self:IsReceiver () and CAC.LuaScanResultReceiver or CAC.LuaScanResultSender)
	end,
	
	ObjectChangedHandler = function (self, lastObject, object)
		if lastObject then
			self:RemoveChildById ("LuaScanResult")
		end
		if object then
			self:AddChild (object:GetLuaScanResult (), "LuaScanResult", self:IsReceiver () and CAC.LuaScanResultReceiver or CAC.LuaScanResultSender)
		end
	end
}

CAC.LuaScannerStatusSender   = CAC.CreateObjectSenderFactory   (CAC.LuaScannerStatus)
CAC.LuaScannerStatusReceiver = CAC.CreateObjectReceiverFactory (CAC.LuaScannerStatus)

function self:ctor ()
	self.LuaScannerState = CAC.LuaScannerState.Unstarted
	self.LuaScanResult   = nil
	self.LastScanTime    = 0
	
	CAC.EventProvider (self)
end

-- ISerializable
function self:Serialize (outBuffer)
	outBuffer:UInt8  (self:GetLuaScannerState ())
	outBuffer:UInt32 (self:GetLastScanTime    ())
	
	return outBuffer
end

function self:Deserialize (inBuffer)
	self:SetLuaScannerState (inBuffer:UInt8  ())
	self:SetLastScanTime    (inBuffer:UInt32 ())
	
	return self
end

-- LuaScannerStatus
function self:SerializeLuaScanResult (outBuffer)
	if self.LuaScanResult then
		local subOutBuffer = CAC.StringOutBuffer ()
		self.LuaScanResult:Serialize (subOutBuffer)
		outBuffer:StringN32 (util.Compress (subOutBuffer:GetString ()))
	else
		outBuffer:StringN32 ("")
	end
	
	return outBuffer
end

function self:DeserializeLuaScanResult (inBuffer)
	local compressedData = inBuffer:StringN32 ()
	if compressedData ~= "" then
		local luaScanResult = CAC.LuaScanResult ()
		luaScanResult:Deserialize (CAC.StringInBuffer (util.Decompress (compressedData)))
		self:SetLuaScanResult (luaScanResult)
	else
		self:SetLuaScanResult (nil)
	end
	
	return self
end

function self:GetLuaScannerState ()
	return self.LuaScannerState
end

function self:GetLuaScanResult ()
	return self.LuaScanResult
end

function self:GetLastScanTime ()
	return self.LastScanTime
end

function self:SetLuaScannerState (luaScannerState)
	if self.LuaScannerState == luaScannerState then return self end
	
	self.LuaScannerState = luaScannerState
	
	self:DispatchEvent ("LuaScannerStateChanged", self.LuaScannerState)
	
	return self
end

function self:SetLuaScanResult (luaScanResult)
	if self.LuaScanResult == luaScanResult then return self end
	
	self.LuaScanResult = luaScanResult
	
	self:DispatchEvent ("LuaScanResultChanged", self.LuaScanResult)
	
	return self
end

function self:SetLastScanTime (lastScanTime)
	if self.LastScanTime == lastScanTime then return self end
	
	self.LastScanTime = lastScanTime
	
	self:DispatchEvent ("LastScanTimeChanged", self.LastScanTime)
	
	return self
end

function self:UpdateLastScanTime ()
	self:SetLastScanTime (os.time ())
end