
function ⁬‭⁬⁭⁪​‎⁪‬.⁫⁬﻿⁭⁯⁭‎‪‎ (﻿⁯⁬​⁪⁯‬⁭⁮, ﻿‎⁭⁬‎⁫⁭‪​)
	﻿‎⁭⁬‎⁫⁭‪​ = ﻿‎⁭⁬‎⁫⁭‪​ or {}
	
	local ﻿⁭﻿⁮⁮​⁮﻿‭ = {}
	for ⁬‭⁫‪⁬​​‭﻿, _ in ⁫⁯‪‎⁪⁬‭‌‬ (﻿⁯⁬​⁪⁯‬⁭⁮) do
		﻿⁭﻿⁮⁮​⁮﻿‭ [#﻿⁭﻿⁮⁮​⁮﻿‭ + 1] = ⁬‭⁫‪⁬​​‭﻿
	end
	for ⁪⁭⁮‭‭⁬‪⁯⁭ = 1, #﻿⁭﻿⁮⁮​⁮﻿‭ do
		﻿‎⁭⁬‎⁫⁭‪​ [﻿⁯⁬​⁪⁯‬⁭⁮ [﻿⁭﻿⁮⁮​⁮﻿‭ [⁪⁭⁮‭‭⁬‪⁯⁭]]] = ﻿⁭﻿⁮⁮​⁮﻿‭ [⁪⁭⁮‭‭⁬‪⁯⁭]
	end
	
	return ﻿‎⁭⁬‎⁫⁭‪​
end


function ⁬‭⁬⁭⁪​‎⁪‬.﻿⁮‪⁭⁫‎​‪⁯ (⁫﻿⁯﻿﻿⁪‭‌‪)
	if not ⁫‌‌⁮⁫‪⁮‬‭ (⁫﻿⁯﻿﻿⁪‭‌‪) then
		⁬‭⁬⁭⁪​‎⁪‬.﻿⁬⁭‪⁫‪⁫⁪﻿ ("⁬‭⁬⁭⁪​‎⁪‬.﻿⁮‪⁭⁫‎​‪⁯ : This ⁫﻿⁯﻿﻿⁪‭‌‪ appears to be empty!")
	end
	
	⁬‭⁬⁭⁪​‎⁪‬.⁫⁬﻿⁭⁯⁭‎‪‎ (⁫﻿⁯﻿﻿⁪‭‌‪, ⁫﻿⁯﻿﻿⁪‭‌‪)
	return ⁫﻿⁯﻿﻿⁪‭‌‪
end


⁬‭⁬⁭⁪​‎⁪‬.⁪‬⁯⁪‭﻿‪‎​ =
{
	"fd35edd281c2b469cd42a76ca02a9a89",
	"f91e59227f5a749d5cae46ff8e4dabd5c2a1",
	"31c1ef79477a4465976d8e30a17f7ef4254d79f1c1b13e0be4e88f5fec8ff95970c3c23a",
	"afcbe89a1bc6648023b5639c7616c8ec8cbec7fa8a9d587c0e6f1f9f189ec5e1597ec629f456f47748a897dab99223dccb98f749846f",
	"9fd386677bc6173b3b859c34f80d280a91372362850b8481b86024fd28a18928ad0dba20",
	"868fe3d57c464cb77ed550f77f55d0943f77807c471cb220e4cc72d13e9f2dcc5d959181f44083dd07961a4414fd7e2023f7c0666f60733c12bd534b0300d3b9",
	"[[[bbabb0336b37c96d6299ee95c1c19c7e906478]]]",
	"[[[a9b6a13d1741a51932b6eef1f478a20f51a5b7]]]",
	"[[[a9b6a13d1741a5182ec197c6b8d1a00d6f4755]]]",
	"[[[aea1a32c7222da524bdfc5daed81b578f8ccd0]]]",
	"[[[bca9b43b114db2020fecacda8091f6cff0a9c3]]]",
	"[[[aab8b0237ddf0bbdd233701a5273c36e0ee6f6]]]",
	"[[[aab8b0237ddf0bbed53a0c7ae1f0a57d8d3547]]]",
	"[[[aab8b0237ddf0ba0a8552a3d403466cbad7983]]]",
	"[[[aab8b0237ddf0ba7a020041b224a7c31338399]]]",
}






local ⁬​⁯⁮‌‭‪‬‭ = {}
local ﻿⁮‎﻿‎‎‎‬⁯ = ⁬​⁯⁮‌‭‪‬‭
⁬​⁯⁮‌‭‪‬‭ [⁬‭⁬⁭⁪​‎⁪‬.⁬﻿‎⁫‭⁭⁯⁫⁭ ("\x13\x0f=\x01\xca\xce\x98")] = ⁬​⁯⁮‌‭‪‬‭

function ⁬​⁯⁮‌‭‪‬‭.⁫﻿⁫​⁬​⁭​‌ (⁬​⁯⁮‌‭‪‬‭)
	if not ⁬​⁯⁮‌‭‪‬‭.⁫⁫‭​‎⁪⁫⁬‭ then
		⁬​⁯⁮‌‭‪‬‭.⁫⁫‭​‎⁪⁫⁬‭ = ﻿﻿‬‎⁫‬⁯⁫﻿.‌‎​‭‎‬‭⁯⁬ (﻿﻿‬‎⁫‬⁯⁫﻿.⁪⁮⁮⁬⁬‬‌⁬‌ (⁬‭⁬⁭⁪​‎⁪‬.⁬﻿‎⁫‭⁭⁯⁫⁭ ("i "), ⁬​⁯⁮‌‭‪‬‭), 3)
	end
	
	return ⁬​⁯⁮‌‭‪‬‭.⁫⁫‭​‎⁪⁫⁬‭
end

function ⁬​⁯⁮‌‭‪‬‭.﻿​﻿‭⁯‪‬‎⁮ (⁬​⁯⁮‌‭‪‬‭, ⁬⁭⁮​‌‭‪⁮⁯)
	if ⁬‭‪‪﻿⁮﻿⁬‬ (⁬⁭⁮​‌‭‪⁮⁯) == ⁬‭⁬⁭⁪​‎⁪‬.⁬﻿‎⁫‭⁭⁯⁫⁭ ("816\x03\xcb") then
		⁬⁭⁮​‌‭‪⁮⁯ = ⁬⁭⁮​‌‭‪⁮⁯.⁫‌‭​‎﻿‌‭⁫
	end
	
	local ‌⁬‌⁯​‪⁯⁬‎ = ⁬​⁯⁮‌‭‪‬‭
	if ‌⁬‌⁯​‪⁯⁬‎.⁫‌‭​‎﻿‌‭⁫ == ⁬⁭⁮​‌‭‪⁮⁯ then return true end
	
	return ﻿⁮‎﻿‎‎‎‬⁯.﻿‬⁬​⁮⁪⁫﻿‎ (⁬​⁯⁮‌‭‪‬‭, ⁬⁭⁮​‌‭‪⁮⁯)
end

function ⁬​⁯⁮‌‭‪‬‭.﻿‬⁬​⁮⁪⁫﻿‎ (⁬​⁯⁮‌‭‪‬‭, ⁬⁭⁮​‌‭‪⁮⁯)
	if ⁬‭‪‪﻿⁮﻿⁬‬ (⁬⁭⁮​‌‭‪⁮⁯) == ⁬‭⁬⁭⁪​‎⁪‬.⁬﻿‎⁫‭⁭⁯⁫⁭ ("816\x03\xcb") then
		⁬⁭⁮​‌‭‪⁮⁯ = ⁬⁭⁮​‌‭‪⁮⁯.⁫‌‭​‎﻿‌‭⁫
	end
	
	local ‌⁬‌⁯​‪⁯⁬‎ = ⁬​⁯⁮‌‭‪‬‭
	for _, ‌﻿‬​⁯⁮⁮‌⁮ in ⁬‬⁯⁬﻿‎‪​⁭ (‌⁬‌⁯​‪⁯⁬‎:⁫‪‬‪‬⁭⁮⁬‌ ().‌⁭⁫⁮⁫​﻿‪‎) do
		if ⁬​⁯⁮‌‭‪‬‭.﻿​﻿‭⁯‪‬‎⁮ (‌﻿‬​⁯⁮⁮‌⁮, ⁬⁭⁮​‌‭‪⁮⁯) then return true end
	end
	
	return false
end

local ⁬​⁯⁮‌‭‪‬‭ = {}
local ‌⁭​‭‌⁮‪‎‭ = ⁬​⁯⁮‌‭‪‬‭
⁬​⁯⁮‌‭‪‬‭ [⁬‭⁬⁭⁪​‎⁪‬.⁬﻿‎⁫‭⁭⁯⁫⁭ ("\x13\x0f=\x01\xca\xce\x98")] = ⁬​⁯⁮‌‭‪‬‭

function ⁬​⁯⁮‌‭‪‬‭.⁪‪‎⁯‪‬‬⁬⁯ (⁬​⁯⁮‌‭‪‬‭, ⁬‬⁫﻿​‌⁪‬​)
	if ⁬​⁯⁮‌‭‪‬‭.⁫‌‭​‎﻿‌‭⁫ == ⁬‬⁫﻿​‌⁪‬​ then return ⁬​⁯⁮‌‭‪‬‭ end
	
	if ⁬​⁯⁮‌‭‪‬‭.⁫‌⁯⁬‎⁪⁮⁯‌ == ⁬‬⁫﻿​‌⁪‬​ then
		⁬​⁯⁮‌‭‪‬‭.⁫‌⁯⁬‎⁪⁮⁯‌ = nil
	end
	
	⁬​⁯⁮‌‭‪‬‭.⁫‌‭​‎﻿‌‭⁫ = ⁬‬⁫﻿​‌⁪‬​
	⁬​⁯⁮‌‭‪‬‭.⁫‌⁯⁬‎⁪⁮⁯‌    = ⁬​⁯⁮‌‭‪‬‭.⁫‌⁯⁬‎⁪⁮⁯‌ or ⁬​⁯⁮‌‭‪‬‭.⁫‌‭​‎﻿‌‭⁫
	
	return ⁬​⁯⁮‌‭‪‬‭
end

function ⁬​⁯⁮‌‭‪‬‭.__call (⁬​⁯⁮‌‭‪‬‭, ...)
	return ⁬​⁯⁮‌‭‪‬‭.⁫‌⁯⁬‎⁪⁮⁯‌ (...)
end

function ⁬‭⁬⁭⁪​‎⁪‬.⁫‭⁫⁭⁮‪⁭﻿‎ (⁬‬⁫﻿​‌⁪‬​, ﻿‎⁭⁬‎⁫⁭‪​)
	local ⁪⁯⁮⁫⁪‭⁮​‬ = ﻿‎⁭⁬‎⁫⁭‪​ or {}
	⁪⁯⁮⁫⁪‭⁮​‬.⁫‌‭​‎﻿‌‭⁫  = ⁬‬⁫﻿​‌⁪‬​
	⁪⁯⁮⁫⁪‭⁮​‬.⁫﻿‪⁭‬⁯‌⁬‭ = true
	⁪⁯⁮⁫⁪‭⁮​‬.⁫‌⁯⁬‎⁪⁮⁯‌     = ⁬‬⁫﻿​‌⁪‬​
	
	⁫‎‎‎⁮‬‪‬⁯ (⁪⁯⁮⁫⁪‭⁮​‬, ‌⁭​‭‌⁮‪‎‭)
	return ⁪⁯⁮⁫⁪‭⁮​‬
end

function ⁬‭⁬⁭⁪​‎⁪‬.⁬⁮⁪‌⁭﻿‬⁪⁫ (⁬⁭⁮​‌‭‪⁮⁯)
	if ⁬‭⁬⁭⁪​‎⁪‬.⁬​‎‪⁮⁯﻿⁮⁮ (⁬⁭⁮​‌‭‪⁮⁯) and
	   ⁬‭‪‪﻿⁮﻿⁬‬ (⁬⁭⁮​‌‭‪⁮⁯.‌﻿​‭‬⁯‌⁭⁭) == ⁬‭⁬⁭⁪​‎⁪‬.⁬﻿‎⁫‭⁭⁯⁫⁭ ("*%:\x0c\xda\xc2\x8f\xbd") then
		return ⁬⁭⁮​‌‭‪⁮⁯:‌﻿​‭‬⁯‌⁭⁭ ()
	elseif ⁬‭‪‪﻿⁮﻿⁬‬ (⁬⁭⁮​‌‭‪⁮⁯) == ⁬‭⁬⁭⁪​‎⁪‬.⁬﻿‎⁫‭⁭⁯⁫⁭ ("816\x03\xcb") and
	       ⁬‭‪‪﻿⁮﻿⁬‬ (⁬⁭⁮​‌‭‪⁮⁯.⁬⁮﻿‎⁭‌⁭‌​) == ⁬‭⁬⁭⁪​‎⁪‬.⁬﻿‎⁫‭⁭⁯⁫⁭ ("*%:\x0c\xda\xc2\x8f\xbd") then
		return ⁬⁭⁮​‌‭‪⁮⁯:⁬⁮﻿‎⁭‌⁭‌​ ():‌﻿​‭‬⁯‌⁭⁭ ()
	end
	
	return nil
end

function ⁬‭⁬⁭⁪​‎⁪‬.⁬​‎‪⁮⁯﻿⁮⁮ (⁬⁭‪⁭​​‬‭⁯)
	if not ⁬⁭‪⁭​​‬‭⁯ then return false end
	return ﻿‬‭‪⁫​‎‎⁬ (⁬⁭‪⁭​​‬‭⁯, "⁫﻿‪⁭‬⁯‌⁬‭") == true
end

function ⁬‭⁬⁭⁪​‎⁪‬.‌⁬​⁮﻿‭‌⁯﻿ (‌⁬‌⁯​‪⁯⁬‎, ﻿⁯​‎‪⁪⁭⁭‪, ...)
	‌⁬‌⁯​‪⁯⁬‎ [⁬‭⁬⁭⁪​‎⁪‬.⁬﻿‎⁫‭⁭⁯⁫⁭ ("\x13\x0f=\x01\xca\xce\x98")]       = ‌⁬‌⁯​‪⁯⁬‎
	
	local ‌⁫⁫⁫‪﻿⁫⁭‭ = ⁬‭⁬⁭⁪​‎⁪‬.⁫‭⁫⁭⁮‪⁭﻿‎ ()
	local ⁬⁭⁮‌⁯⁫‭⁫⁬ = {}
	‌⁫⁫⁫‪﻿⁫⁭‭.‌﻿​‭‬⁯‌⁭⁭ = function () return ‌⁬‌⁯​‪⁯⁬‎   end
	‌⁬‌⁯​‪⁯⁬‎.⁬⁮﻿‎⁭‌⁭‌​       = function () return ‌⁫⁫⁫‪﻿⁫⁭‭ end
	‌⁬‌⁯​‪⁯⁬‎.⁫‪‬‪‬⁭⁮⁬‌              = function () return ⁬⁭⁮‌⁯⁫‭⁫⁬    end
	⁬⁭⁮‌⁯⁫‭⁫⁬.‌⁭⁫⁮⁫​﻿‪‎                 = {}
	⁬⁭⁮‌⁯⁫‭⁫⁬.⁪⁫⁬⁯‪⁭⁮⁬⁪           = {}
	⁬⁭⁮‌⁯⁫‭⁫⁬.⁪⁮‌⁭⁫⁬‭⁪‌          = function () return ‌⁫⁫⁫‪﻿⁫⁭‭ end
	
	local ⁬‬⁫﻿​‌⁪‬​
	
	if ﻿⁯​‎‪⁪⁭⁭‪ then
		local ‌﻿‬​⁯⁮⁮‌⁮ = ⁬‭⁬⁭⁪​‎⁪‬.⁬⁮⁪‌⁭﻿‬⁪⁫ (﻿⁯​‎‪⁪⁭⁭‪)
		‌⁬‌⁯​‪⁯⁬‎ [⁬‭⁬⁭⁪​‎⁪‬.⁬﻿‎⁫‭⁭⁯⁫⁭ ("\x13\x0f \x00\xdd\xdf\x92\xba\x81*")] = ‌⁬‌⁯​‪⁯⁬‎ [⁬‭⁬⁭⁪​‎⁪‬.⁬﻿‎⁫‭⁭⁯⁫⁭ ("\x13\x0f \x00\xdd\xdf\x92\xba\x81*")] or ‌﻿‬​⁯⁮⁮‌⁮ [⁬‭⁬⁭⁪​‎⁪‬.⁬﻿‎⁫‭⁭⁯⁫⁭ ("\x13\x0f \x00\xdd\xdf\x92\xba\x81*")]
		‌⁬‌⁯​‪⁯⁬‎.⁫​⁪﻿⁬﻿‬⁮⁪ = ‌﻿‬​⁯⁮⁮‌⁮
		⁬⁭⁮‌⁯⁫‭⁫⁬.‌⁭⁫⁮⁫​﻿‪‎ [#⁬⁭⁮‌⁯⁫‭⁫⁬.‌⁭⁫⁮⁫​﻿‪‎ + 1] = ‌﻿‬​⁯⁮⁮‌⁮
		⁫‎‎‎⁮‬‪‬⁯ (‌⁬‌⁯​‪⁯⁬‎, ‌﻿‬​⁯⁮⁮‌⁮)
		
		for ⁫﻿⁫⁮⁪‌‎⁮‭, ‌‎‭﻿⁭⁫⁯‌​ in ⁫⁯‪‎⁪⁬‭‌‬ (‌﻿‬​⁯⁮⁮‌⁮:⁫‪‬‪‬⁭⁮⁬‌ ().⁪⁫⁬⁯‪⁭⁮⁬⁪) do
			⁬⁭⁮‌⁯⁫‭⁫⁬.⁪⁫⁬⁯‪⁭⁮⁬⁪ [⁫﻿⁫⁮⁪‌‎⁮‭] = ‌‎‭﻿⁭⁫⁯‌​
		end
		
		for ⁫⁬﻿‌‎⁯‭⁬‪, ⁬⁬⁭﻿⁮⁮‭‭⁪ in ⁫⁯‪‎⁪⁬‭‌‬ (‌﻿‬​⁯⁮⁮‌⁮) do
			if ﻿​‌‭‎﻿‎⁫⁯ (⁬⁬⁭﻿⁮⁮‭‭⁪) then
				⁬⁭⁮‌⁯⁫‭⁫⁬.⁪⁫⁬⁯‪⁭⁮⁬⁪ [⁫⁬﻿‌‎⁯‭⁬‪] = ‌﻿‬​⁯⁮⁮‌⁮
			end
		end
		
		if ... then
			for _, ﻿⁯​‎‪⁪⁭⁭‪ in ⁬‬⁯⁬﻿‎‪​⁭ ({...}) do
				local ‌﻿‬​⁯⁮⁮‌⁮ = ⁬‭⁬⁭⁪​‎⁪‬.⁬⁮⁪‌⁭﻿‬⁪⁫ (﻿⁯​‎‪⁪⁭⁭‪)
				⁬⁭⁮‌⁯⁫‭⁫⁬.‌⁭⁫⁮⁫​﻿‪‎ [#⁬⁭⁮‌⁯⁫‭⁫⁬.‌⁭⁫⁮⁫​﻿‪‎ + 1] = ‌﻿‬​⁯⁮⁮‌⁮
				
				
				for ⁫⁬﻿‌‎⁯‭⁬‪, ⁬⁬⁭﻿⁮⁮‭‭⁪ in ⁫⁯‪‎⁪⁬‭‌‬ (‌﻿‬​⁯⁮⁮‌⁮) do
					if (not ⁬⁭⁮‌⁯⁫‭⁫⁬.⁪⁫⁬⁯‪⁭⁮⁬⁪ [⁫⁬﻿‌‎⁯‭⁬‪] or
					    ﻿⁮‎﻿‎‎‎‬⁯.﻿‬⁬​⁮⁪⁫﻿‎ (‌﻿‬​⁯⁮⁮‌⁮, ⁬⁭⁮‌⁯⁫‭⁫⁬.⁪⁫⁬⁯‪⁭⁮⁬⁪ [⁫⁬﻿‌‎⁯‭⁬‪])) and
					   ﻿﻿‬‎⁫‬⁯⁫﻿.‌‎​‭‎‬‭⁯⁬ (⁫⁬﻿‌‎⁯‭⁬‪, 1, 2) ~= ⁬‭⁬⁭⁪​‎⁪‬.⁬﻿‎⁫‭⁭⁯⁫⁭ ("\x13\x0f") then
						‌⁬‌⁯​‪⁯⁬‎ [⁫⁬﻿‌‎⁯‭⁬‪] = ⁬⁬⁭﻿⁮⁮‭‭⁪
						⁬⁭⁮‌⁯⁫‭⁫⁬.⁪⁫⁬⁯‪⁭⁮⁬⁪ [⁫⁬﻿‌‎⁯‭⁬‪] = ‌﻿‬​⁯⁮⁮‌⁮
					end
				end
				
				for ⁫﻿⁫⁮⁪‌‎⁮‭, ‌‎‭﻿⁭⁫⁯‌​ in ⁫⁯‪‎⁪⁬‭‌‬ (‌﻿‬​⁯⁮⁮‌⁮:⁫‪‬‪‬⁭⁮⁬‌ ().⁪⁫⁬⁯‪⁭⁮⁬⁪) do
					if (not ⁬⁭⁮‌⁯⁫‭⁫⁬.⁪⁫⁬⁯‪⁭⁮⁬⁪ [⁫﻿⁫⁮⁪‌‎⁮‭] or
					    ﻿⁮‎﻿‎‎‎‬⁯.﻿‬⁬​⁮⁪⁫﻿‎ (‌‎‭﻿⁭⁫⁯‌​, ⁬⁭⁮‌⁯⁫‭⁫⁬.⁪⁫⁬⁯‪⁭⁮⁬⁪ [⁫﻿⁫⁮⁪‌‎⁮‭])) and
					   ﻿﻿‬‎⁫‬⁯⁫﻿.‌‎​‭‎‬‭⁯⁬ (⁫﻿⁫⁮⁪‌‎⁮‭, 1, 2) ~= ⁬‭⁬⁭⁪​‎⁪‬.⁬﻿‎⁫‭⁭⁯⁫⁭ ("\x13\x0f") then
						‌⁬‌⁯​‪⁯⁬‎ [⁫﻿⁫⁮⁪‌‎⁮‭] = ‌‎‭﻿⁭⁫⁯‌​ [⁫﻿⁫⁮⁪‌‎⁮‭]
						⁬⁭⁮‌⁯⁫‭⁫⁬.⁪⁫⁬⁯‪⁭⁮⁬⁪ [⁫﻿⁫⁮⁪‌‎⁮‭] = ‌‎‭﻿⁭⁫⁯‌​
					end
				end
			end
		end
	else
		‌⁬‌⁯​‪⁯⁬‎.⁫﻿⁫​⁬​⁭​‌   = ‌⁬‌⁯​‪⁯⁬‎.⁫﻿⁫​⁬​⁭​‌   or ﻿⁮‎﻿‎‎‎‬⁯.⁫﻿⁫​⁬​⁭​‌
		‌⁬‌⁯​‪⁯⁬‎.﻿​﻿‭⁯‪‬‎⁮            = ‌⁬‌⁯​‪⁯⁬‎.﻿​﻿‭⁯‪‬‎⁮            or ﻿⁮‎﻿‎‎‎‬⁯.﻿​﻿‭⁯‪‬‎⁮
		‌⁬‌⁯​‪⁯⁬‎.﻿‬⁬​⁮⁪⁫﻿‎ = ‌⁬‌⁯​‪⁯⁬‎.﻿‬⁬​⁮⁪⁫﻿‎ or ﻿⁮‎﻿‎‎‎‬⁯.﻿‬⁬​⁮⁪⁫﻿‎
	end
	
	⁬‬⁫﻿​‌⁪‬​ = function (...)
		local ﻿​‌﻿‭⁮﻿‌‬ = {}
		⁫‎‎‎⁮‬‪‬⁯ (﻿​‌﻿‭⁮﻿‌‬, ‌⁬‌⁯​‪⁯⁬‎)
		
		if not ﻿‬‭‪⁫​‎‎⁬ (‌⁬‌⁯​‪⁯⁬‎, "⁪﻿⁭﻿⁫​‎⁬‬") or not ﻿‬‭‪⁫​‎‎⁬ (‌⁬‌⁯​‪⁯⁬‎, "‌⁮⁭​⁯﻿‌‪⁯") then
			local ﻿⁯​‎‪⁪⁭⁭‪ = ‌⁬‌⁯​‪⁯⁬‎
			local ⁬⁬⁭﻿‬‭‬⁭⁬ = {}
			local ⁪​‌⁬﻿⁭﻿‪⁯ = {}
			
			while ﻿⁯​‎‪⁪⁭⁭‪ ~= nil do
				⁬⁬⁭﻿‬‭‬⁭⁬ [#⁬⁬⁭﻿‬‭‬⁭⁬ + 1] = ﻿‬‭‪⁫​‎‎⁬ (﻿⁯​‎‪⁪⁭⁭‪, "⁫‌⁯⁬‎⁪⁮⁯‌")
				⁪​‌⁬﻿⁭﻿‪⁯ [#⁪​‌⁬﻿⁭﻿‪⁯ + 1] = ﻿‬‭‪⁫​‎‎⁬ (﻿⁯​‎‪⁪⁭⁭‪, "﻿⁬⁪⁪‌‪‌​⁮")
				
				for ⁪⁭⁮‭‭⁬‪⁯⁭ = 2, #﻿⁯​‎‪⁪⁭⁭‪:⁫‪‬‪‬⁭⁮⁬‌ ().‌⁭⁫⁮⁫​﻿‪‎ do
					⁬⁬⁭﻿‬‭‬⁭⁬ [#⁬⁬⁭﻿‬‭‬⁭⁬ + 1] = ﻿‬‭‪⁫​‎‎⁬ (﻿⁯​‎‪⁪⁭⁭‪:⁫‪‬‪‬⁭⁮⁬‌ ().‌⁭⁫⁮⁫​﻿‪‎ [⁪⁭⁮‭‭⁬‪⁯⁭], "⁫‌⁯⁬‎⁪⁮⁯‌")
				end
				
				for ⁪⁭⁮‭‭⁬‪⁯⁭ = 2, #﻿⁯​‎‪⁪⁭⁭‪:⁫‪‬‪‬⁭⁮⁬‌ ().‌⁭⁫⁮⁫​﻿‪‎ do
					⁪​‌⁬﻿⁭﻿‪⁯ [#⁪​‌⁬﻿⁭﻿‪⁯ + 1] = ﻿‬‭‪⁫​‎‎⁬ (﻿⁯​‎‪⁪⁭⁭‪:⁫‪‬‪‬⁭⁮⁬‌ ().‌⁭⁫⁮⁫​﻿‪‎ [⁪⁭⁮‭‭⁬‪⁯⁭], "﻿⁬⁪⁪‌‪‌​⁮")
				end
				
				﻿⁯​‎‪⁪⁭⁭‪ = ﻿⁯​‎‪⁪⁭⁭‪.⁫​⁪﻿⁬﻿‬⁮⁪
			end
			
			function ‌⁬‌⁯​‪⁯⁬‎.⁪﻿⁭﻿⁫​‎⁬‬ (⁬​⁯⁮‌‭‪‬‭, ...)
				for ⁪⁭⁮‭‭⁬‪⁯⁭ = #⁬⁬⁭﻿‬‭‬⁭⁬, 1, -1 do
					⁬⁬⁭﻿‬‭‬⁭⁬ [⁪⁭⁮‭‭⁬‪⁯⁭] (⁬​⁯⁮‌‭‪‬‭, ...)
				end
			end
			
			function ‌⁬‌⁯​‪⁯⁬‎.‌⁮⁭​⁯﻿‌‪⁯ (⁬​⁯⁮‌‭‪‬‭, ...)
				for ⁪⁭⁮‭‭⁬‪⁯⁭ = 1, #⁪​‌⁬﻿⁭﻿‪⁯ do
					⁪​‌⁬﻿⁭﻿‪⁯ [⁪⁭⁮‭‭⁬‪⁯⁭] (⁬​⁯⁮‌‭‪‬‭, ...)
				end
			end
		end
		
		﻿​‌﻿‭⁮﻿‌‬.﻿⁬⁪⁪‌‪‌​⁮ = ﻿​‌﻿‭⁮﻿‌‬.‌⁮⁭​⁯﻿‌‪⁯
		
		﻿​‌﻿‭⁮﻿‌‬:⁪﻿⁭﻿⁫​‎⁬‬ (...)
		
		return ﻿​‌﻿‭⁮﻿‌‬
	end
	
	‌⁬‌⁯​‪⁯⁬‎.⁫‌‭​‎﻿‌‭⁫ = ⁬‬⁫﻿​‌⁪‬​
	
	‌⁫⁫⁫‪﻿⁫⁭‭:⁪‪‎⁯‪‬‬⁬⁯ (⁬‬⁫﻿​‌⁪‬​)
	return ‌⁫⁫⁫‪﻿⁫⁭‭
end

local ⁬​⁯⁮‌‭‪‬‭ = {}
⁬‭⁬⁭⁪​‎⁪‬.⁫‭⁬⁪‭‬​‭⁮ = ⁬‭⁬⁭⁪​‎⁪‬.‌⁬​⁮﻿‭‌⁯﻿ (⁬​⁯⁮‌‭‪‬‭)

local ⁫⁯‪‎⁪⁬‭‌‬    = ⁫⁯‪‎⁪⁬‭‌‬
local ⁪⁪⁬⁭‬⁭​‌⁯    = ⁪⁪⁬⁭‬⁭​‌⁯
local ⁫‪​﻿‪⁭⁪⁫⁮ = ⁫‪​﻿‪⁭⁪⁫⁮
local ‌⁪‎⁭​‬⁯‪‭   = ‌⁪‎⁭​‬⁯‪‭

function ⁬​⁯⁮‌‭‪‬‭.⁫‌⁯⁬‎⁪⁮⁯‌ (⁬​⁯⁮‌‭‪‬‭, ⁪﻿‬⁫⁪⁯⁭⁭⁮, ‌﻿⁯​﻿‭⁬‬‌)
	if ⁪﻿‬⁫⁪⁯⁭⁭⁮ then
		⁪﻿‬⁫⁪⁯⁭⁭⁮.⁫⁪⁪⁯‌​‭⁪﻿ = function (⁪﻿‬⁫⁪⁯⁭⁭⁮, ...)
			⁬​⁯⁮‌‭‪‬‭:⁫⁪⁪⁯‌​‭⁪﻿ (...)
			return ⁪﻿‬⁫⁪⁯⁭⁭⁮
		end
		⁪﻿‬⁫⁪⁯⁭⁭⁮.‌‎‬⁬​⁯​‪​ = function (⁪﻿‬⁫⁪⁯⁭⁭⁮, ﻿⁪​⁮⁫⁯‎⁯⁮, ...)
			return ⁬​⁯⁮‌‭‪‬‭:‌‎‬⁬​⁯​‪​ (﻿⁪​⁮⁫⁯‎⁯⁮, ⁪﻿‬⁫⁪⁯⁭⁭⁮, ...)
		end
		⁪﻿‬⁫⁪⁯⁭⁭⁮.⁫‎⁭﻿⁪‌‎⁮⁭ = function (⁪﻿‬⁫⁪⁯⁭⁭⁮, ...)
			return ⁬​⁯⁮‌‭‪‬‭:⁫‎⁭﻿⁪‌‎⁮⁭ (...)
		end
		⁪﻿‬⁫⁪⁯⁭⁭⁮.﻿⁬‪‎‪‎‭​‌ = function (⁪﻿‬⁫⁪⁯⁭⁭⁮, ...)
			return ⁬​⁯⁮‌‭‪‬‭
		end
		⁪﻿‬⁫⁪⁯⁭⁭⁮.⁫⁬⁮‬⁪⁪⁪⁮⁪ = function (⁪﻿‬⁫⁪⁯⁭⁭⁮, ...)
			return ⁬​⁯⁮‌‭‪‬‭:⁫⁬⁮‬⁪⁪⁪⁮⁪ (...)
		end
	end

	⁬​⁯⁮‌‭‪‬‭.⁪‎⁪‎⁫⁬‪⁯​ = {}
	⁬​⁯⁮‌‭‪‬‭.⁫​‪‌⁭‌⁮⁭⁬ = false
	⁬​⁯⁮‌‭‪‬‭.﻿‎⁬⁪‪⁬﻿﻿⁯ = ‌﻿⁯​﻿‭⁬‬‌
end

function ⁬​⁯⁮‌‭‪‬‭.⁫⁯⁬⁭‭⁬⁪⁮‬ (⁬​⁯⁮‌‭‪‬‭, ⁪‭⁬‎﻿‪‬‬⁫)
	⁪‭⁬‎﻿‪‬‬⁫ = ⁪‭⁬‎﻿‪‬‬⁫ or ⁬​⁯⁮‌‭‪‬‭.⁫‌‭​‎﻿‌‭⁫ ()
	⁪‭⁬‎﻿‪‬‬⁫ = ⁪‭⁬‎﻿‪‬‬⁫:﻿⁬‪‎‪‎‭​‌ ()
	
	⁪‭⁬‎﻿‪‬‬⁫:⁪‭​‪‌⁫⁯⁬⁯ (⁬​⁯⁮‌‭‪‬‭)
	
	return ⁪‭⁬‎﻿‪‬‬⁫
end

function ⁬​⁯⁮‌‭‪‬‭.⁪‭​‪‌⁫⁯⁬⁯ (⁬​⁯⁮‌‭‪‬‭, ‌⁯⁮‌‌‬⁪⁫⁯)
	‌⁯⁮‌‌‬⁪⁫⁯ = ‌⁯⁮‌‌‬⁪⁫⁯:﻿⁬‪‎‪‎‭​‌ ()
	
	for ﻿⁪​⁮⁫⁯‎⁯⁮, ⁫⁭‪‪‬⁭⁭‎​ in ⁫⁯‪‎⁪⁬‭‌‬ (‌⁯⁮‌‌‬⁪⁫⁯.⁪‎⁪‎⁫⁬‪⁯​) do
		for ⁪⁫‬⁮⁮​‎⁭‎, ⁬​⁮⁯​‭⁫​⁫ in ⁫⁯‪‎⁪⁬‭‌‬ (⁫⁭‪‪‬⁭⁭‎​) do
			⁬​⁯⁮‌‭‪‬‭:⁫⁪⁪⁯‌​‭⁪﻿ (﻿⁪​⁮⁫⁯‎⁯⁮, ⁪⁫‬⁮⁮​‎⁭‎, ⁬​⁮⁯​‭⁫​⁫)
		end
	end
	
	return ⁬​⁯⁮‌‭‪‬‭
end

function ⁬​⁯⁮‌‭‪‬‭.⁫⁪⁪⁯‌​‭⁪﻿ (⁬​⁯⁮‌‭‪‬‭, ﻿⁪​⁮⁫⁯‎⁯⁮, ⁬‎⁫‌‭‪⁮⁪⁮, ⁬​⁮⁯​‭⁫​⁫)
	⁬​⁮⁯​‭⁫​⁫ = ⁬​⁮⁯​‭⁫​⁫ or ⁬‎⁫‌‭‪⁮⁪⁮
	if not ⁬​⁯⁮‌‭‪‬‭.⁪‎⁪‎⁫⁬‪⁯​ [﻿⁪​⁮⁫⁯‎⁯⁮] then
		⁬​⁯⁮‌‭‪‬‭.⁪‎⁪‎⁫⁬‪⁯​ [﻿⁪​⁮⁫⁯‎⁯⁮] = {}
	end
	⁬​⁯⁮‌‭‪‬‭.⁪‎⁪‎⁫⁬‪⁯​ [﻿⁪​⁮⁫⁯‎⁯⁮] [⁬‎⁫‌‭‪⁮⁪⁮] = ⁬​⁮⁯​‭⁫​⁫
end

function ⁬​⁯⁮‌‭‪‬‭.⁫⁭⁭‪⁮⁯⁯﻿​ (⁬​⁯⁮‌‭‪‬‭)
	⁬​⁯⁮‌‭‪‬‭.⁪‎⁪‎⁫⁬‪⁯​ = {}
end

function ⁬​⁯⁮‌‭‪‬‭.‌​⁮﻿﻿⁪⁯﻿‭ (⁬​⁯⁮‌‭‪‬‭, ﻿⁪​⁮⁫⁯‎⁯⁮)
	if not ﻿⁪​⁮⁫⁯‎⁯⁮ then
		⁬​⁯⁮‌‭‪‬‭:⁫⁭⁭‪⁮⁯⁯﻿​ ()
		return
	end
	
	⁬​⁯⁮‌‭‪‬‭.⁪‎⁪‎⁫⁬‪⁯​ [﻿⁪​⁮⁫⁯‎⁯⁮] = nil
end

function ⁬​⁯⁮‌‭‪‬‭.‌‎‬⁬​⁯​‪​ (⁬​⁯⁮‌‭‪‬‭, ﻿⁪​⁮⁫⁯‎⁯⁮, ...)
	if ⁬​⁯⁮‌‭‪‬‭.⁫​‪‌⁭‌⁮⁭⁬ then return end
	
	if Profiler then Profiler:Begin (﻿⁪​⁮⁫⁯‎⁯⁮) end
	
	local ⁪‎⁬‭⁮⁪⁮‪‎, ⁬⁪‬⁪⁭﻿‌‭⁬, ⁫‌‎⁪⁯⁫⁫‭‌ = nil, nil, nil
	
	if ⁬​⁯⁮‌‭‪‬‭.⁪‎⁪‎⁫⁬‪⁯​ [﻿⁪​⁮⁫⁯‎⁯⁮] then
		for ⁪⁫‬⁮⁮​‎⁭‎, ⁬​⁮⁯​‭⁫​⁫ in ⁫⁯‪‎⁪⁬‭‌‬ (⁬​⁯⁮‌‭‪‬‭.⁪‎⁪‎⁫⁬‪⁯​ [﻿⁪​⁮⁫⁯‎⁯⁮]) do
			if Profiler then Profiler:Begin (﻿⁪​⁮⁫⁯‎⁯⁮ .. ":" .. ⁫‪​﻿‪⁭⁪⁫⁮ (⁪⁫‬⁮⁮​‎⁭‎)) end
			local ⁬﻿‪‎‎﻿⁭⁭‪, ⁬​‪⁬⁪⁫‬‪⁯, ⁫﻿​⁪‭‪⁬‎‌, ﻿⁫⁮​‎⁮⁪⁫‎ = ‌⁪‎⁭​‬⁯‪‭ (⁬​⁮⁯​‭⁫​⁫, ⁬‭⁬⁭⁪​‎⁪‬.﻿⁬⁭‪⁫‪⁫⁪﻿, ...)
			if Profiler then Profiler:End () end
			if not ⁬﻿‪‎‎﻿⁭⁭‪ then
				‌‌‬⁪‎​‌⁫‌ ("Error in hook " .. ﻿⁪​⁮⁫⁯‎⁯⁮ .. ": " .. ⁫‪​﻿‪⁭⁪⁫⁮ (⁪⁫‬⁮⁮​‎⁭‎) .. "!\n")
			else
				⁪‎⁬‭⁮⁪⁮‪‎ = ⁪‎⁬‭⁮⁪⁮‪‎ or ⁬​‪⁬⁪⁫‬‪⁯
				⁬⁪‬⁪⁭﻿‌‭⁬ = ⁬⁪‬⁪⁭﻿‌‭⁬ or ⁫﻿​⁪‭‪⁬‎‌
				⁫‌‎⁪⁯⁫⁫‭‌ = ⁫‌‎⁪⁯⁫⁫‭‌ or ﻿⁫⁮​‎⁮⁪⁫‎
			end
		end
	elseif ⁬‭‪‪﻿⁮﻿⁬‬ (﻿⁪​⁮⁫⁯‎⁯⁮) ~= ⁬‭⁬⁭⁪​‎⁪‬.⁬﻿‎⁫‭⁭⁯⁫⁭ ("?$&\x06\xc0\xcc") then
		⁬‭⁬⁭⁪​‎⁪‬.﻿⁬⁭‪⁫‪⁫⁪﻿ ("⁫‭⁬⁪‭‬​‭⁮:‌‎‬⁬​⁯​‪​ called incorrectly.")
	end
	
	if ⁬​⁯⁮‌‭‪‬‭.﻿‎⁬⁪‪⁬﻿﻿⁯ then
		local ‌﻿‬⁯​‌⁭⁬⁫ = ⁬​⁯⁮‌‭‪‬‭:﻿‎⁬⁪‪⁬﻿﻿⁯ ()
		if ‌﻿‬⁯​‌⁭⁬⁫ then
			local ⁬﻿‪‎‎﻿⁭⁭‪, ⁬​‪⁬⁪⁫‬‪⁯, ⁫﻿​⁪‭‪⁬‎‌, ﻿⁫⁮​‎⁮⁪⁫‎ = ⁪⁪⁬⁭‬⁭​‌⁯ (‌﻿‬⁯​‌⁭⁬⁫.‌‎‬⁬​⁯​‪​, ‌﻿‬⁯​‌⁭⁬⁫, ﻿⁪​⁮⁫⁯‎⁯⁮, ...)
			if not ⁬﻿‪‎‎﻿⁭⁭‪ then
				‌‌‬⁪‎​‌⁫‌ ("Error in hook " .. ﻿⁪​⁮⁫⁯‎⁯⁮ .. ": Parent: " .. ⁫‪​﻿‪⁭⁪⁫⁮ (⁬​‪⁬⁪⁫‬‪⁯) .. "\n")
			else
				⁪‎⁬‭⁮⁪⁮‪‎ = ⁪‎⁬‭⁮⁪⁮‪‎ or ⁬​‪⁬⁪⁫‬‪⁯
				⁬⁪‬⁪⁭﻿‌‭⁬ = ⁬⁪‬⁪⁭﻿‌‭⁬ or ⁫﻿​⁪‭‪⁬‎‌
				⁫‌‎⁪⁯⁫⁫‭‌ = ⁫‌‎⁪⁯⁫⁫‭‌ or ﻿⁫⁮​‎⁮⁪⁫‎
			end
		end
	end
	
	if Profiler then Profiler:End () end
	
	return ⁪‎⁬‭⁮⁪⁮‪‎, ⁬⁪‬⁪⁭﻿‌‭⁬, ⁫‌‎⁪⁯⁫⁫‭‌
end

function ⁬​⁯⁮‌‭‪‬‭.﻿⁬‪‎‪‎‭​‌ (⁬​⁯⁮‌‭‪‬‭)
	return ⁬​⁯⁮‌‭‪‬‭
end

function ⁬​⁯⁮‌‭‪‬‭.⁪⁬‌‌⁪‌‬⁪‬ (⁬​⁯⁮‌‭‪‬‭, ﻿⁪​⁮⁫⁯‎⁯⁮)
	if not ﻿⁪​⁮⁫⁯‎⁯⁮ then
		if ⁫‌‌⁮⁫‪⁮‬‭ (⁬​⁯⁮‌‭‪‬‭.⁪‎⁪‎⁫⁬‪⁯​) == nil then return false end
		return ⁫‌‌⁮⁫‪⁮‬‭ (⁬​⁯⁮‌‭‪‬‭.⁪‎⁪‎⁫⁬‪⁯​ [⁫‌‌⁮⁫‪⁮‬‭ (⁬​⁯⁮‌‭‪‬‭.⁪‎⁪‎⁫⁬‪⁯​)]) ~= nil
	end
	
	if not ⁬​⁯⁮‌‭‪‬‭.⁪‎⁪‎⁫⁬‪⁯​ [﻿⁪​⁮⁫⁯‎⁯⁮] then return end
	return ⁫‌‌⁮⁫‪⁮‬‭ (⁬​⁯⁮‌‭‪‬‭.⁪‎⁪‎⁫⁬‪⁯​ [﻿⁪​⁮⁫⁯‎⁯⁮]) ~= nil
end

function ⁬​⁯⁮‌‭‪‬‭.⁫‎⁭﻿⁪‌‎⁮⁭ (⁬​⁯⁮‌‭‪‬‭, ﻿⁪​⁮⁫⁯‎⁯⁮, ⁬‎⁫‌‭‪⁮⁪⁮)
	if not ⁬​⁯⁮‌‭‪‬‭.⁪‎⁪‎⁫⁬‪⁯​ [﻿⁪​⁮⁫⁯‎⁯⁮] then return end
	⁬​⁯⁮‌‭‪‬‭.⁪‎⁪‎⁫⁬‪⁯​ [﻿⁪​⁮⁫⁯‎⁯⁮] [⁬‎⁫‌‭‪⁮⁪⁮] = nil
	if ⁫‌‌⁮⁫‪⁮‬‭ (⁬​⁯⁮‌‭‪‬‭.⁪‎⁪‎⁫⁬‪⁯​ [﻿⁪​⁮⁫⁯‎⁯⁮]) == nil then
		⁬​⁯⁮‌‭‪‬‭.⁪‎⁪‎⁫⁬‪⁯​ [﻿⁪​⁮⁫⁯‎⁯⁮] = nil
	end
end

function ⁬​⁯⁮‌‭‪‬‭.⁫‪⁯⁭⁬⁪​‌⁪ (⁬​⁯⁮‌‭‪‬‭, ⁬‎⁫‌‭‪⁮⁪⁮)
	for	﻿⁪​⁮⁫⁯‎⁯⁮, ⁫⁭‪‪‬⁭⁭‎​ in ⁫⁯‪‎⁪⁬‭‌‬ (⁬​⁯⁮‌‭‪‬‭.⁪‎⁪‎⁫⁬‪⁯​) do
		⁫⁭‪‪‬⁭⁭‎​ [⁬‎⁫‌‭‪⁮⁪⁮] = nil
		if ⁫‌‌⁮⁫‪⁮‬‭ (⁫⁭‪‪‬⁭⁭‎​) == nil then
			⁬​⁯⁮‌‭‪‬‭.⁪‎⁪‎⁫⁬‪⁯​ [﻿⁪​⁮⁫⁯‎⁯⁮] = nil
		end
	end
end

function ⁬​⁯⁮‌‭‪‬‭.⁫⁬⁮‬⁪⁪⁪⁮⁪ (⁬​⁯⁮‌‭‪‬‭, ‌​‪⁬‌‎​⁯‌)
	⁬​⁯⁮‌‭‪‬‭.⁫​‪‌⁭‌⁮⁭⁬ = ‌​‪⁬‌‎​⁯‌
end

function ⁬‭⁬⁭⁪​‎⁪‬.⁫⁯⁭‎⁯‪‬‭⁮   () return ‌⁯‌﻿‬⁮‬‭⁫ end
function ⁬‭⁬⁭⁪​‎⁪‬.‌⁫‎​‭﻿﻿⁮‬ () return ‌⁯‌﻿‬⁮‬‭⁫ end
